1) Comparator<R> : functional interface ->  compare(T t, T u): Integer
    a) lambda expression
       Comparator<R>: (t,u) -> compare_logic_integer

       Collections.sort(list, comparator)
        or
       list.sort(comparator)

    b) Comparator<R>.comparing(Function<T, U extends Comparable> keyExtractor, Comparator optional_keyComparator_override)

       a)  Comparator<Employee>.comparing(Employee::getName or e -> e.getName())
            getName: U: since string implements Comparable <compareTo(T t): Integer>

       b) Custom field saying field doesn't implements Comparable
            Comparator<Employee>.comparing(Employee::getField or e -> e.getField(), (f1, f2) -> compare_logic_integer)
